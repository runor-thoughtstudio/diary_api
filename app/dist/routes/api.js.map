{"version":3,"sources":["../../../src/routes/api.js"],"names":["router","express","Router","use","bodyParser","json","urlencoded","extended","datastructure","entries","users","get","req","res","undefined","params","id","status","error","entry","post","body","title","description","push","message","put","delete","serverStart","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;AACAF,OAAOG,GAAP,CAAWC,qBAAWC,IAAX,EAAX;AACAL,OAAOG,GAAP,CAAWC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAX;AACA,IAAMC,gBAAgB,EAAEC,SAAS,EAAX,EAAeC,OAAO,EAAtB,EAAtB;;AAEAV,OAAOW,GAAP,CAAW,iBAAX,EAA8B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3CA,KAAIR,IAAJ,CAASG,cAAcC,OAAvB;AACA,CAFD;AAGAT,OAAOW,GAAP,CAAW,qBAAX,EAAkC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/C,KAAIL,cAAcC,OAAd,KAA0BK,SAA1B,IAAuCN,cAAcC,OAAd,CAAsBG,IAAIG,MAAJ,CAAWC,EAAjC,MAAyCF,SAApF,EAA+F;AAC9FD,MAAII,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,EAAEa,OAAO,2BAAT,EAArB;AACA,EAFD,MAEO;AACN,MAAMC,QAAQX,cAAcC,OAAd,CAAsBG,IAAIG,MAAJ,CAAWC,EAAjC,CAAd;AACAH,MAAIR,IAAJ,CAASc,KAAT;AACA;AACD,CAPD;AAQAnB,OAAOoB,IAAP,CAAY,iBAAZ,EAA+B,UAACR,GAAD,EAAMC,GAAN,EAAc;AAC5C,KAAID,IAAIS,IAAJ,CAASC,KAAT,IAAkBV,IAAIS,IAAJ,CAASE,WAA/B,EAA4C;AAC3Cf,gBAAcC,OAAd,CAAsBe,IAAtB,CAA2BZ,IAAIS,IAA/B;AACAR,MAAII,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,EAAEoB,SAAS,4BAAX,EAArB;AACA;AACDZ,KAAII,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,EAAEoB,SAAS,iBAAX,EAArB;AACA,CAND;AAOAzB,OAAO0B,GAAP,CAAW,qBAAX,EAAkC,UAACd,GAAD,EAAMC,GAAN,EAAc;AAC/C,KAAI,CAACD,IAAIS,IAAJ,CAASC,KAAV,IAAmB,CAACV,IAAIS,IAAJ,CAASE,WAAjC,EAA8C;AAC7CV,MAAII,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,EAAEoB,SAAS,iBAAX,EAArB;AACA;AACD,KAAIjB,cAAcC,OAAd,KAA0BK,SAA1B,IAAuCN,cAAcC,OAAd,CAAsBG,IAAIG,MAAJ,CAAWC,EAAjC,MAAyCF,SAApF,EAA+F;AAC9FD,MAAII,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,EAAEa,OAAO,2BAAT,EAArB;AACA;AACDV,eAAcC,OAAd,CAAsBG,IAAIG,MAAJ,CAAWC,EAAjC,EAAqCM,KAArC,GAA6CV,IAAIS,IAAJ,CAASC,KAAtD;AACAd,eAAcC,OAAd,CAAsBG,IAAIG,MAAJ,CAAWC,EAAjC,EAAqCO,WAArC,GAAmDX,IAAIS,IAAJ,CAASE,WAA5D;AACAV,KAAII,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,EAAEoB,SAAS,6BAAX,EAArB;AACA,CAVD;AAWAzB,OAAO2B,MAAP,CAAc,qBAAd,EAAqC,UAACf,GAAD,EAAMC,GAAN;AAAA,QAAcA,IAAIR,IAAJ,CAAS,iBAAT,CAAd;AAAA,CAArC;;AAEA,IAAMuB,cAAc,wBAApB;AACAC,OAAOC,OAAP,GAAiB;AAChB9B,eADgB;AAEhB4B;AAFgB,CAAjB","file":"api.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\n\nconst router = express.Router();\nrouter.use(bodyParser.json());\nrouter.use(bodyParser.urlencoded({ extended: false }));\nconst datastructure = { entries: [], users: [] };\n\nrouter.get('/api/v1/entries', (req, res) => {\n\tres.json(datastructure.entries);\n});\nrouter.get('/api/v1/entries/:id', (req, res) => {\n\tif (datastructure.entries === undefined || datastructure.entries[req.params.id] === undefined) {\n\t\tres.status(404).json({ error: 'This entry does not exist' });\n\t} else {\n\t\tconst entry = datastructure.entries[req.params.id];\n\t\tres.json(entry);\n\t}\n});\nrouter.post('/api/v1/entries', (req, res) => {\n\tif (req.body.title && req.body.description) {\n\t\tdatastructure.entries.push(req.body);\n\t\tres.status(201).json({ message: 'The entry has been created' });\n\t}\n\tres.status(400).json({ message: 'Invalid request' });\n});\nrouter.put('/api/v1/entries/:id', (req, res) => {\n\tif (!req.body.title || !req.body.description) {\n\t\tres.status(400).json({ message: 'Invalid request' });\n\t}\n\tif (datastructure.entries === undefined || datastructure.entries[req.params.id] === undefined) {\n\t\tres.status(404).json({ error: 'This entry does not exist' });\n\t}\n\tdatastructure.entries[req.params.id].title = req.body.title;\n\tdatastructure.entries[req.params.id].description = req.body.description;\n\tres.status(200).json({ message: 'This entry has been updated' });\n});\nrouter.delete('/api/v1/entries/:id', (req, res) => res.json('Delete an entry'));\n\nconst serverStart = 'the server has started';\nmodule.exports = {\n\trouter,\n\tserverStart,\n};\n"]}